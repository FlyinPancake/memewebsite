#cloud-config

apt:
  sources:
    postgresql.list:
      source: "deb http://apt.postgresql.org/pub/repos/apt bookworm-pgdg main"
      keyid: B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8

write_files:
  - path: /etc/environment
    content: |
      SESSION_KEY=${session_encoder_key}
    append: true
  - path: /etc/systemd/system/meme.service
    content: |
      [Unit]
      Description=Meme service
      [Service]
      Type=oneshot
      WorkingDirectory=/root/memewebsite
      ExecStart=gunicorn -w 4 'main:app' -b 0.0.0.0:80
      User=root
      Environment="SESSION_KEY=${session_encoder_key}"
      Environment="S3_BUCKET=${aws_image_bucket}"
      Environment="SENDER_EMAIL=${sender_email}"
      Environment="WEBSITE_URL=${website_url}"
      Environment="AWS_REGION=${aws_region}"
      Environment="AWS_DEFAULT_REGION=${aws_region}"
      Environment="AWS_ACCESS_KEY_ID=${aws_access_key_id}"
      Environment="AWS_SECRET_ACCESS_KEY=${aws_secret_access_key}"
      Environment="DEBUG=${debug}"
  - path: /tmp/db_init.sql
    content: | 
      CREATE USER ${username} WITH PASSWORD '${password}';
      CREATE DATABASE meme WITH OWNER ${username};
      CREATE EXTENSION tsm_system_rows;
      \c meme;
      CREATE TABLE users (
          username VARCHAR(25) NOT NULL,
          password VARCHAR(32) NOT NULL,
          email VARCHAR(50) NOT NULL,
          admin BOOLEAN DEFAULT false,
          PRIMARY KEY (username)
      );

      CREATE TABLE posts (
          post_id SERIAL,
          title VARCHAR(50) NOT NULL,
          url VARCHAR(255) NOT NULL,
          published INT NOT NULL,
          username VARCHAR(25) NOT NULL,
          approver VARCHAR(25),
          approved BOOLEAN,
          tag_all BOOLEAN DEFAULT false,
          tag_emk BOOLEAN DEFAULT false,
          tag_gpk BOOLEAN DEFAULT false,
          tag_epk BOOLEAN DEFAULT false,
          tag_vbk BOOLEAN DEFAULT false,
          tag_vik BOOLEAN DEFAULT false,
          tag_kjk BOOLEAN DEFAULT false,
          tag_ttk BOOLEAN DEFAULT false,
          tag_gtk BOOLEAN DEFAULT false,
          FOREIGN KEY (username) REFERENCES users(username),
          FOREIGN KEY (approver) REFERENCES users(username),
        PRIMARY KEY (post_id)
      );

      CREATE TABLE votes (
        post_id INT NOT NULL,
        username VARCHAR(25) NOT NULL,
        vote SMALLINT NOT NULL CHECK (vote IN (-1, 1)),
        FOREIGN KEY (post_id) REFERENCES posts(post_id),
        FOREIGN KEY (username) REFERENCES users(username)
      );

      CREATE TABLE pending_registrations (
          email VARCHAR(40) NOT NULL,
          uuid VARCHAR(36) NOT NULL,
        username VARCHAR(25) NOT NULL,
          password VARCHAR(32) NOT NULL,
          Created INT NOT NULL,
          PRIMARY KEY (email)
      );
      GRANT ALL PRIVILEGES ON TABLE users TO ${username};
      GRANT ALL PRIVILEGES ON TABLE posts TO ${username};
      GRANT ALL PRIVILEGES ON TABLE votes TO ${username};
      GRANT ALL PRIVILEGES ON TABLE pending_registrations TO ${username};
      GRANT USAGE, SELECT, UPDATE ON SEQUENCE posts_post_id_seq TO ${username};
  - path: /etc/backup-script.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      mkdir -p /tmp/dump
      dumpfile=/tmp/dump/$(date +"%F-%H-%M-%S").tar
      pg_dump meme --format=tar --file=$dumpfile
      aws s3 cp $dumpfile s3://${aws_backup_bucket}
      rm -R /tmp/dump
  - path: /etc/systemd/system/backup.service
    content: |
      [Unit]
      Description=Backup service
      [Service]
      Type=oneshot
      ExecStart=/etc/backup-script.sh
      User=postgres
      Environment="AWS_REGION=${aws_region}"
      Environment="AWS_ACCESS_KEY_ID=${aws_access_key_id}"
      Environment="AWS_SECRET_ACCESS_KEY=${aws_secret_access_key}"
  - path: /etc/systemd/system/backup.timer
    content: |
      [Unit]
      Description=Backup timer
      [Timer]
      OnCalendar=daily
      Persistent=true
      [Install]
      WantedBy=timers.target

runcmd:
  - apt-get update
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install
  - DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends postgresql-16
  - sudo -u postgres psql -f /tmp/db_init.sql
  - echo "host meme ${username} 127.0.0.1/32 scram-sha-256" >> /etc/postgresql/16/main/pg_hba.conf
  - sudo -u postgres psql -c "SELECT pg_reload_conf();"

  - apt-get -y install pip python3-flask python3-flask-limiter python3-psycopg2 python3-boto3 python3-gunicorn gunicorn
  - cd /root && git clone https://github.com/tatliHU/memewebsite.git
  - systemctl daemon-reload
  - systemctl enable meme
  - systemctl start meme

package_update: true
package_upgrade: true
packages:
  - git
  - unzip